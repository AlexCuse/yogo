version: "2.2"
services:
  monitor:
    build:
      context: go
      dockerfile: ./Dockerfile
      args:
        project: monitor
    depends_on:
      - kafka
    ports:
      - "50000:50000"
    restart: always
    command: ["/service"]
    volumes:
      - ./debug-configuration.toml:/configuration.toml
  watch:
    build:
      context: go
      dockerfile: ./Dockerfile
      args:
        project: watch
    depends_on:
      - pg
    ports:
      - "50100:50100"
    restart: always
    command: ["/service"]
    volumes:
      - ./debug-configuration.toml:/configuration.toml
  quote-enricher:
    build:
      context: go
      dockerfile: ./Dockerfile
      args:
        project: quote-enricher
    depends_on:
      - kafka
    restart: always
    command: ["/service"]
    volumes:
      - ./debug-configuration.toml:/configuration.toml
  scanner:
    build:
      context: go
      dockerfile: ./Dockerfile
      args:
        project: scanner
    depends_on:
      - kafka
    restart: always
    command: ["/service"]
    volumes:
      - ./debug-configuration.toml:/configuration.toml
  signals:
    build:
      context: go
      dockerfile: ./Dockerfile
      args:
        project: signals
    depends_on:
      - pg
    ports:
      - "50200:50200"
    restart: always
    command: ["/service"]
    volumes:
      - ./debug-configuration.toml:/configuration.toml
  history:
    build:
      context: go
      dockerfile: ./Dockerfile
      args:
        project: history
    depends_on:
      - kafka
      - pg
    restart: always
    command: ["/service"]
    volumes:
      - ./debug-configuration.toml:/configuration.toml
  dashboard:
    build:
      context: web/dashboard/.
    depends_on:
      - watch
      - signals
    ports:
      - "3000:3000"
    restart: always
    environment:
      - REACT_APP_WATCH_API_URL=http://localhost:50100/
      - REACT_APP_SIGNAL_API_URL=http://localhost:50200/
  social-enricher:
    build:
      context: go
      dockerfile: ./Dockerfile
      args:
        project: social-enricher
    depends_on:
      - kafka
      - watch
    restart: always
    command: ["/service"]
    volumes:
      - ./debug-configuration.toml:/configuration.toml
  # infra
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_CREATE_TOPICS: "yogo-quotes:2:1,yogo-hits:1:1,yogo-scans:1:1,yogo-stats:2:1,yogo-social:1:1,yogo-sentiment:1:1"
      KAFKA_ADVERTISED_HOST_NAME: 172.17.0.1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
  pg:
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=yogo
      - POSTGRES_USER=yogo
      - POSTGRES_PASSWORD=yogo
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
